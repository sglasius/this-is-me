{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/autocomplete\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/tabs\";\nimport * as i6 from \"@angular/material/core\";\n\nfunction ShowtimesComponent_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\n\nexport class ShowtimesComponent {\n  constructor() {\n    this.searchStr = \"\";\n    this.searched = [];\n    this.myControl = new FormControl();\n    this.options = ['One', 'Two', 'Three'];\n  }\n\n  modelChange(str) {\n    this.searchStr = str;\n    console.log(\"Searching for \" + this.searchStr); // Add code for searching here\n\n    this.searched.push(str);\n  }\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n}\n\nShowtimesComponent.ɵfac = function ShowtimesComponent_Factory(t) {\n  return new (t || ShowtimesComponent)();\n};\n\nShowtimesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowtimesComponent,\n  selectors: [[\"app-showtimes\"]],\n  decls: 16,\n  vars: 4,\n  consts: [[\"fxLayout\", \"column\", \"fxLayoutWrap\", \"\", 1, \"showtimes-wrapper\"], [1, \"movie-form\"], [\"appearance\", \"fill\", 1, \"search-field\"], [\"type\", \"text\", \"placeholder\", \"Search movies...\", 1, \"search-input\", 3, \"ngModel\", \"ngModelChange\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"label\", \"ARCLIGHT\"], [\"label\", \"PACIFIC THEATRES\"], [\"label\", \"AMC\"], [3, \"value\"]],\n  template: function ShowtimesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(3, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ShowtimesComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.modelChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \" [matAutocomplete]=\\\"auto\\\" class=\\\"search-input\\\"> \");\n      i0.ɵɵelementStart(5, \"mat-autocomplete\", null, 4);\n      i0.ɵɵtemplate(7, ShowtimesComponent_mat_option_7_Template, 2, 2, \"mat-option\", 5);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-tab-group\");\n      i0.ɵɵelementStart(10, \"mat-tab\", 6);\n      i0.ɵɵtext(11, \" Content 1 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-tab\", 7);\n      i0.ɵɵtext(13, \" Content 2 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"mat-tab\", 8);\n      i0.ɵɵtext(15, \" Content 3 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchStr);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 2, ctx.filteredOptions));\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i2.MatFormField, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i3.MatAutocomplete, i4.NgForOf, i5.MatTabGroup, i5.MatTab, i6.MatOption],\n  pipes: [i4.AsyncPipe],\n  styles: [\".showtimes-wrapper[_ngcontent-%COMP%] {\\n  width: 40%;\\n  margin: 0 auto;\\n}\\n\\n.movie-form[_ngcontent-%COMP%] {\\n  margin: 0 auto;\\n  width: 100%;\\n  background: white;\\n}\\n\\n.search-input[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3d0aW1lcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxjQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBT0E7RUFDSSxXQUFBO0FBSkoiLCJmaWxlIjoic2hvd3RpbWVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNob3d0aW1lcy13cmFwcGVyIHtcbiAgICB3aWR0aDogNDAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ubW92aWUtZm9ybSB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG59XG5cbi8vIC5zZWFyY2gtZmllbGQge1xuLy8gICAgIHdpZHRoOiAxMDAlO1xuLy8gICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4vLyB9XG4uc2VhcmNoLWlucHV0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAvLyBiYWNrZ3JvdW5kOiByZWQ7XG5cbn1cblxuLy8gLmV4YW1wbGUtY2FyZCB7XG4vLyAgICAgbWluLXdpZHRoOiAxMCU7XG4vLyAgICAgbWFyZ2luOiA0MHB4O1xuLy8gfVxuXG4iXX0= */\"]\n});","map":{"version":3,"sources":["/Users/steven/git/this-is-me/src/app/secure/showtimes/showtimes.component.ts","/Users/steven/git/this-is-me/src/app/secure/showtimes/showtimes.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-showtimes',\n  templateUrl: './showtimes.component.html',\n  styleUrls: ['./showtimes.component.scss']\n})\nexport class ShowtimesComponent implements OnInit {\n  public searchStr: string = \"\"\n  private searched: Array<string> = [];\n\n  public modelChange(str: string): void {\n    this.searchStr = str;\n    console.log(\"Searching for \" + this.searchStr);\n    // Add code for searching here\n    this.searched.push(str);\n  }\n  myControl = new FormControl();\n  options: string[] = ['One', 'Two', 'Three'];\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n}\n","<div fxLayout=\"column\" fxLayoutWrap class=\"showtimes-wrapper\">\n    <form class=\"movie-form\">\n        <mat-form-field appearance=\"fill\" class=\"search-field\">\n            <input type=\"text\" placeholder=\"Search movies...\" [ngModel]=\"searchStr\" (ngModelChange)=\"modelChange($event)\"\n                class=\"search-input\">\n                [matAutocomplete]=\"auto\" class=\"search-input\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                    {{option}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n    </form>\n\n    <mat-tab-group>\n        <mat-tab label=\"ARCLIGHT\"> Content 1 </mat-tab>\n        <mat-tab label=\"PACIFIC THEATRES\"> Content 2 </mat-tab>\n        <mat-tab label=\"AMC\"> Content 3 </mat-tab>\n    </mat-tab-group>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}