{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/autocomplete\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/tabs\";\nimport * as i7 from \"@angular/material/core\";\n\nfunction ShowtimesComponent_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\n\nexport class ShowtimesComponent {\n  constructor() {\n    this.myControl = new FormControl();\n    this.options = ['One', 'Two', 'Three'];\n  }\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n}\n\nShowtimesComponent.ɵfac = function ShowtimesComponent_Factory(t) {\n  return new (t || ShowtimesComponent)();\n};\n\nShowtimesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowtimesComponent,\n  selectors: [[\"app-showtimes\"]],\n  decls: 15,\n  vars: 5,\n  consts: [[\"fxLayout\", \"column\", \"fxLayoutWrap\", \"\", 1, \"showtimes-wrapper\"], [1, \"movie-form\"], [\"appearance\", \"fill\"], [\"type\", \"text\", \"placeholder\", \"Search movies...\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"label\", \"ARCLIGHT\"], [\"label\", \"PACIFIC THEATRES\"], [\"label\", \"AMC\"], [3, \"value\"]],\n  template: function ShowtimesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n      i0.ɵɵelement(3, \"input\", 3);\n      i0.ɵɵelementStart(4, \"mat-autocomplete\", null, 4);\n      i0.ɵɵtemplate(6, ShowtimesComponent_mat_option_6_Template, 2, 2, \"mat-option\", 5);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-tab-group\");\n      i0.ɵɵelementStart(9, \"mat-tab\", 6);\n      i0.ɵɵtext(10, \" Content 1 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-tab\", 7);\n      i0.ɵɵtext(12, \" Content 2 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"mat-tab\", 8);\n      i0.ɵɵtext(14, \" Content 3 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 3, ctx.filteredOptions));\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i2.MatFormField, i3.MatInput, i1.DefaultValueAccessor, i4.MatAutocompleteTrigger, i1.NgControlStatus, i1.FormControlDirective, i4.MatAutocomplete, i5.NgForOf, i6.MatTabGroup, i6.MatTab, i7.MatOption],\n  pipes: [i5.AsyncPipe],\n  styles: [\".showtimes-wrapper[_ngcontent-%COMP%] {\\n  width: 40%;\\n  margin: 0 auto;\\n}\\n\\n.movie-form[_ngcontent-%COMP%] {\\n  margin: 0 auto;\\n  width: 100%;\\n  background: white;\\n}\\n\\n.example-card[_ngcontent-%COMP%] {\\n  min-width: 10%;\\n  margin: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3d0aW1lcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7RUFDQSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxjQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxjQUFBO0VBQ0EsWUFBQTtBQUNKIiwiZmlsZSI6InNob3d0aW1lcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaG93dGltZXMtd3JhcHBlciB7XG4gICAgd2lkdGg6IDQwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbn1cblxuLm1vdmllLWZvcm0ge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xufVxuXG4uZXhhbXBsZS1jYXJkIHtcbiAgICBtaW4td2lkdGg6IDEwJTtcbiAgICBtYXJnaW46IDQwcHg7XG59XG5cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/Users/steven/git/this-is-me/src/app/secure/showtimes/showtimes.component.ts","/Users/steven/git/this-is-me/src/app/secure/showtimes/showtimes.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-showtimes',\n  templateUrl: './showtimes.component.html',\n  styleUrls: ['./showtimes.component.scss']\n})\nexport class ShowtimesComponent implements OnInit {\n  myControl = new FormControl();\n  options: string[] = ['One', 'Two', 'Three'];\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n}\n","<div fxLayout=\"column\" fxLayoutWrap class=\"showtimes-wrapper\">\n    <form class=\"movie-form\">\n        <mat-form-field appearance=\"fill\">\n            <!-- <mat-label>Search movies...</mat-label> -->\n            <input type=\"text\" placeholder=\"Search movies...\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\n                [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                    {{option}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n    </form>\n\n    <mat-tab-group>\n        <mat-tab label=\"ARCLIGHT\"> Content 1 </mat-tab>\n        <mat-tab label=\"PACIFIC THEATRES\"> Content 2 </mat-tab>\n        <mat-tab label=\"AMC\"> Content 3 </mat-tab>\n    </mat-tab-group>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}