{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/autocomplete\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/tabs\";\nimport * as i5 from \"@angular/material/core\";\n\nfunction ShowtimesComponent_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\n\nexport class ShowtimesComponent {\n  constructor() {\n    this.myControl = new FormControl();\n    this.options = ['One', 'Two', 'Three'];\n  }\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n}\n\nShowtimesComponent.ɵfac = function ShowtimesComponent_Factory(t) {\n  return new (t || ShowtimesComponent)();\n};\n\nShowtimesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowtimesComponent,\n  selectors: [[\"app-showtimes\"]],\n  decls: 16,\n  vars: 5,\n  consts: [[1, \"example-form\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"label\", \"First\"], [\"label\", \"Second\"], [\"label\", \"Third\"], [3, \"value\"]],\n  template: function ShowtimesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n      i0.ɵɵelementStart(2, \"mat-label\");\n      i0.ɵɵtext(3, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementStart(5, \"mat-autocomplete\", null, 3);\n      i0.ɵɵtemplate(7, ShowtimesComponent_mat_option_7_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-tab-group\");\n      i0.ɵɵelementStart(10, \"mat-tab\", 5);\n      i0.ɵɵtext(11, \" Content 1 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-tab\", 6);\n      i0.ɵɵtext(13, \" Content 2 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"mat-tab\", 7);\n      i0.ɵɵtext(15, \" Content 3 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(6);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 3, ctx.filteredOptions));\n    }\n  },\n  directives: [i1.MatFormField, i1.MatLabel, i2.MatAutocompleteTrigger, i2.MatAutocomplete, i3.NgForOf, i4.MatTabGroup, i4.MatTab, i5.MatOption],\n  pipes: [i3.AsyncPipe],\n  styles: [\".example-form[_ngcontent-%COMP%] {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNob3d0aW1lcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxXQUFBO0FBQ0o7O0FBRUU7RUFDRSxXQUFBO0FBQ0oiLCJmaWxlIjoic2hvd3RpbWVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZm9ybSB7XG4gICAgbWluLXdpZHRoOiAxNTBweDtcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfSJdfQ== */\"]\n});","map":{"version":3,"sources":["/Users/steven/git/this-is-me/src/app/secure/showtimes/showtimes.component.ts","/Users/steven/git/this-is-me/src/app/secure/showtimes/showtimes.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-showtimes',\n  templateUrl: './showtimes.component.html',\n  styleUrls: ['./showtimes.component.scss']\n})\nexport class ShowtimesComponent implements OnInit {\n  myControl = new FormControl();\n  options: string[] = ['One', 'Two', 'Three'];\n  filteredOptions!: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n}\n","\n<form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n      <mat-label>Number</mat-label>\n      <input type=\"text\"\n             placeholder=\"Pick one\"\n             aria-label=\"Number\"\n             matInput\n             [formControl]=\"myControl\"\n             [matAutocomplete]=\"auto\">\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n          {{option}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </form>\n  \n  <mat-tab-group>\n    <mat-tab label=\"First\"> Content 1 </mat-tab>\n    <mat-tab label=\"Second\"> Content 2 </mat-tab>\n    <mat-tab label=\"Third\"> Content 3 </mat-tab>\n</mat-tab-group>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}